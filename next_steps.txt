X - add sprite tag to tile
    
X - export map to json object
    X add sprite to exported Json object
     
X-convert tiles to json in tilepallet component
X-write json string to file in node
    X add current Time and sprite to filename:

X create map component in main app

X - create get filenames route on server

x - fetch list of map names in maps directory from server
        X- hookup route on frontend and test

X - create map name selector component
    X - Create map name selector dropdown
        x - link selected map to display tiles component
        x - fetch map from server
    
X -display tiles
    x - read tiles obj to get correct sprite map
        X create reset display function that clears all previously rendered tiles
X- create background layer functionality
    X-add bgtile hook in app
    X-set bgtile when map comes back
    X-render bg-tile layer in map
X - create separate map select component that runs before initial map render
    X- create back button
        X- reset isHome state in dropdown comp
    X style map select component

X - add dynamic production/dev paths to fetch calls 

X-Stop player from moving outside map boundaries
    X- get players current position
    X- check if player is outside map width or height
        X- create a boundary check function 
            - check if player pos is < x/y positions for each side of the map
    X - prevent player from moving if boundry check fails

X -add collision logic to player interacting with map
   X - add collision boundaries to object tiles
        X -add passable flag to each tile obj that is a bg tile
        X - create impassable tile flag that can be switched on with toggle
        x - use active tile function to add impassable state to active tile obj
        X Set isPassable state to all tiles on creation to true
            X verify if working

        X parse impassable tiles into separate state
            -done in player component
            
        X - loop through all non-bg tiles before player move
        X -Create map with single impassable tile for testing
            X run tile boundary check function
                X -check current position against all sides of the tile
                        X-translate sides from drawing into function
                    X -iff check passes allow movement
        X -test functionality with many impassable tiles


X - add basic items to map
    
    - add items to the tile palette
        X - crop bow and arrow into separate 32x32 sprites
        X- import bow vector skin into tilePallete comp
        X-Create items tileset json file
        X- create item tiles objects array matrix
        X - render items matrix below geography tiles on pallete
            X-create render items function
                X-loop through items
                x-render item img
            - set active tile to item on click
               X - add itemflag to active tile object
               X - update x/y positions for active item tile
        render active tile on tilemap
            X-check if active tile is an itemTiles
                X-if so render to activetile spot
                - render to tilemap
        save itemTiles in separate obj layer when map is exported
            

 - add pick up item and use item functionality 


add enemies to map
add basic health and damage system
